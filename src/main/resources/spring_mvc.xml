<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
           http://www.springframework.org/schema/context    
           http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:component-scan base-package="cn">
	</context:component-scan>

	<!-- 开启spring aspect aop <aop:aspectj-autoproxy/> -->

	<!-- <mvc:interceptors> <mvc:interceptor> -->
	<!-- /**的意思是所有文件夹及里面的子文件夹;/*是所有文件夹，不含子文件夹 -->
	<!-- 某一模块的所有请求都拦截：/myPath/**, 拦截所有模块的请求/** <mvc:exclude-mapping path=""/>进行排除 -->
	<!-- <mvc:mapping path="/**"/> <mvc:exclude-mapping path="/public/**" /> 
		<bean class="cn.xz.system.controller.interceptor.LoginInterceptor"></bean> 
		</mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/**"/> <mvc:exclude-mapping 
		path="/public/**" /> <bean class="cn.xz.system.controller.interceptor.LimitInterceptor"></bean> 
		</mvc:interceptor> </mvc:interceptors> -->

	<!--异常处理 -->
	<!-- <bean id="exceptionResolver" class="com.ssource.exception.ExceptionHandler"> 
		<property name="businessError" value="error/showBusinessError" /> <property 
		name="defaultError" value="error/showError" /> <property name="uploadError" 
		value="error/showUploadError" /> </bean> -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<bean class="org.springframework.http.MediaType">
								<constructor-arg index="0" value="text" />
								<constructor-arg index="1" value="plain" />
								<constructor-arg index="2" value="UTF-8" />
							</bean>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>

				<!-- 解析返回json -->
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>text/plain;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 如果当前路径是/ 则重定向到 zzz <mvc:view-controller path="/" view-name="redirect:public/login"/> -->

	<!-- 处理 HTTP GET 请求地址/resources/** 分派为静态资源 ${webappRoot}/resources/目录(一般为js,css,image等资源) 
		<mvc:resources mapping="/css/**" location="/css/" cache-period="0"/><!- - 
		0sec,nerver expire - -> <mvc:resources mapping="/imgs/**" location="/imgs/" 
		cache-period="0"/> <mvc:resources mapping="/thirdlibs/**" location="/thirdlibs/" 
		cache-period="0"/> <mvc:resources mapping="/loginbg/**" location="/loginbg/" 
		cache-period="0"/> -->

	<!-- 代替mvc:resources 解决weblogic上无法访问静态资源的问题 <mvc:default-servlet-handler 
		/> -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="72000000" />
	</bean>
</beans>